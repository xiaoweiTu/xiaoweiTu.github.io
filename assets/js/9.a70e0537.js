(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{280:function(a,t,s){"use strict";s.r(t);var v=s(14),e=Object(v.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),t("p",[a._v("以后简称为CWList,它为什么被称为线程安全的数组的呢?")]),a._v(" "),t("p",[a._v("中文名又叫写时复制数组,那就从写开始探索一下它的奥秘把。")]),a._v(" "),t("h2",{attrs:{id:"结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结构"}},[a._v("#")]),a._v(" 结构")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3d4fb5d3bf9a4ffca2b58c99a245319f~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),a._v(" "),t("p",[a._v("从它的结构图可以看到,所有的逻辑都是它自身实现的,没有继承任何类和抽象类。")]),a._v(" "),t("h2",{attrs:{id:"构造方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构造方法"}},[a._v("#")]),a._v(" 构造方法")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1c78d0c88e7241ce9eb72a16cc71115f~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),a._v(" "),t("p",[a._v("从它的3个构造方法可以看到,CWList是不能指定初始大小长度的。要么就是0长度,要么就传入新数组进来替代容器。")]),a._v(" "),t("h2",{attrs:{id:"元素容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#元素容器"}},[a._v("#")]),a._v(" 元素容器")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a25c6748af0e4755b4feed329d8fa445~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),a._v(" "),t("p",[a._v("可以看到CWList只有2个属性,一个用来加锁的lock,一个用来存放数据的容器 array;")]),a._v(" "),t("p",[a._v("并且array添加了volatile属性,这个属性的作用就是保证各线程对于该属性的可见性以及有序性。")]),a._v(" "),t("p",[a._v("简而言之,只要打上了volatile关键的属性,它的修改就能立即被其他线程'看到'。")]),a._v(" "),t("h2",{attrs:{id:"add方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add方法"}},[a._v("#")]),a._v(" add方法")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/625acbac72ef4dce94fd1d572c6c94f2~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),a._v(" "),t("p",[a._v("add方法整个过程很简单清晰:")]),a._v(" "),t("ol",[t("li",[a._v("加上一把锁,防止其他线程同时操作")]),a._v(" "),t("li",[a._v("复制一份原数组长度+1的新数组出来")]),a._v(" "),t("li",[a._v("在新数组上进行增加元素")]),a._v(" "),t("li",[a._v("设置新数组为新的容器array")]),a._v(" "),t("li",[a._v("解锁")])]),a._v(" "),t("p",[a._v("到这应该就明白为什么它被称为写时复制数组了,因为它的就是在写的时候复制一份新数组出来操作,从而不影响其他数组的读取,极大的提高了并发能力。")]),a._v(" "),t("p",[a._v("这个又和MySQL的mvcc很像,读取的都是快照数据。")]),a._v(" "),t("p",[a._v("再来看一下另一个add方法又是如何实现的")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c6fd9481444b4b69b702c896fdb2a138~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),a._v(" "),t("p",[a._v("这个方法就是在指定位置插入元素,我们可以先自己分析一下,如果我们要实现这个方法需要考虑什么?")]),a._v(" "),t("ul",[t("li",[a._v("第一个考虑的肯定是位置范围如何定?")]),a._v(" "),t("li",[a._v("第二个考虑的是在中间插入怎么处理?")])]),a._v(" "),t("p",[a._v("这里CWList给了我们答案;")]),a._v(" "),t("ul",[t("li",[a._v("第一个是只能在本身长度 - 本身长度+1的范围内进行新增")]),a._v(" "),t("li",[a._v("第二个是中间插入就插入中间位置,后面的元素往后移位。")])]),a._v(" "),t("p",[a._v("分析一下该方法,还是一样的进来先加锁,然后判断元素位置是否越界,再判断新增的位置是刚好最后面还是中间,最后设置新元素再解锁。")]),a._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CWList")]),a._v("核心原理就在于新增元素的会复制一个数组出来操作"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("不操作原数组"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("解耦了读操作和写操作"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("使得读不会与写发生争抢问题。\n\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);