(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{281:function(e,t,p){"use strict";p.r(t);var a=p(14),v=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"怎么拉取消息的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#怎么拉取消息的"}},[e._v("#")]),e._v(" 怎么拉取消息的")]),e._v(" "),t("p",[e._v("拉取消息主要关注3个逻辑:")]),e._v(" "),t("ol",[t("li",[e._v("消费者的负载均衡 ：确定该消费者处理多少个queue,以及当前queue消费的进度。")]),e._v(" "),t("li",[e._v("对每个queue组装请求体丢入拉取消息的线程执行。")]),e._v(" "),t("li",[e._v("拉取消息的后台线程从请求队列取请求发送到broker。")])]),e._v(" "),t("p",[e._v("我们抛开源码的其他部分重点看下这3个步骤到底是怎么做的。")]),e._v(" "),t("h2",{attrs:{id:"负载均衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[e._v("#")]),e._v(" 负载均衡")]),e._v(" "),t("p",[e._v("在初始化消费者客户端的时候会默认使用一个平均分配的负载均衡策略")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/570c4cf093684b8ab348ba9acaa21d94~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),e._v(" "),t("p",[e._v("那么在什么时候会调用呢?")]),e._v(" "),t("blockquote",[t("p",[e._v("在客户端调用start()方法后, 会执行到"),t("code",[e._v("mQClientFactory.start();")]),e._v("方法,在这里面会启动负载均衡的线程。")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9fb744d3b563420d8c97cbdb379c5491~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),e._v(" "),t("p",[e._v("来看下负载均衡线程是怎么处理的。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6b45e579d63d46fead0112163e15b297~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),e._v("\n基本可以理解为默认20秒执行一次负载均衡策略。")]),e._v(" "),t("p",[e._v("MQ的负载均衡是基于"),t("code",[e._v("topic")]),e._v("来处理的,每个topic都有多个"),t("code",[e._v("queue")])]),e._v(" "),t("p",[e._v("来看下具体的源码：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a711c4784b72479c89224acbce0b3d93~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/518e6339ffac49a0bcec42193df0f317~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),e._v(" "),t("p",[e._v("在将topic传入后,会先从获取一下这个topic的所有"),t("code",[e._v("queue")]),e._v("信息,随后从"),t("code",[e._v("Broker")]),e._v("拉取该topic下的所有消费者信息下来。(因为所有的消费者启动时都会定时发送心跳给所有的"),t("code",[e._v("Broker")]),e._v("，默认30秒发送一次)。")]),e._v(" "),t("p",[e._v("这样知道了所有的queue和消费者信息后,怎么做负载均衡就由对应的策略类来处理了.")]),e._v(" "),t("p",[e._v("这里我们看下默认的负载均衡怎么处理的,对映源码位置: "),t("code",[e._v("AllocateMessageQueueAveragely#allocate")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8acd2fc191604cfdb3e997c9812b5210~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),e._v(" "),t("p",[e._v("看代码比较难理解,说一个简单的例子,假设该topic有10个queue，共有2个消费者,那么就每个消费者处理5个queue，假设3个消费者,就会出现433的分配情况,尽量保持平均消费。")]),e._v(" "),t("p",[e._v("如果你有4个queue，但是消费者有5个,那么最后一个消费者就不会消费了。")]),e._v(" "),t("p",[e._v("确认了该消费者处理哪些queue之后就需要向"),t("code",[e._v("Broker")]),e._v("拉取消息了。")]),e._v(" "),t("p",[e._v("那么怎么拉的呢？")]),e._v(" "),t("h2",{attrs:{id:"组装请求体"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组装请求体"}},[e._v("#")]),e._v(" 组装请求体")]),e._v(" "),t("p",[e._v("还是在负载均衡的代码中,在确定完queue之后会调用"),t("code",[e._v("updateProcessQueueTableInRebalance")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/859b25b9c0304852b215e1b78831b55e~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),e._v(" "),t("p",[e._v("进去看关键代码:")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9d6c8a80db0a4f71a268735f5acf2fd7~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),e._v(" "),t("p",[e._v("它会遍历所有的"),t("code",[e._v("queue")]),e._v(",从"),t("code",[e._v("Broker")]),e._v("上拉取当前消费者的消费位置. 当然这也只有集群消费会这样拉取。")]),e._v(" "),t("p",[e._v("看下消费位置在"),t("code",[e._v("Broker")]),e._v("上是如何保存的。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/845987ea0e0847809ba765d6d913b535~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),e._v("\n会有一个文件叫做"),t("code",[e._v("consumerOffset.json")]),e._v("它会记录各个消费者消费的topic的每个"),t("code",[e._v("queue")]),e._v("的进度。")]),e._v(" "),t("p",[e._v("这里面的进度位置指向的是"),t("code",[e._v("consumerQueue")]),e._v("目录下的文件位置。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/01e8bc3123dc49c49345f5bc4614de69~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),e._v("\n每条消息会以"),t("code",[e._v("20")]),e._v("字节长度存入"),t("code",[e._v("consumerQueue")]),e._v("中。")]),e._v(" "),t("p",[e._v("假如当前位置是0,那么0*20 = 0，从"),t("code",[e._v("consumerQueue")]),e._v("中读取0到20个字节的数据,取出其中的消息位置即可。")]),e._v(" "),t("p",[e._v("获取到这些信息后,给每个queue组装请求体随后丢入请求队列。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0dca204e8ead4aaca236c74740c89f24~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),e._v("\n看下是怎么处理的：")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cc34686cfc9e4323aa5a4931ed06a1e6~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),e._v("\n其实最后都会走到这里:")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/169476317515453f83616f8a0803d3da~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),e._v("\n往一个"),t("code",[e._v("LinkedBlockingQueue<PullRequest>")]),e._v("丢入信息,那么必然有一个线程会从里面取出处理,这个线程在哪呢?")]),e._v(" "),t("p",[e._v("还记得在哪里启动负载均衡的吗? 在它的上面就是启动请求线程的。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6c24328a2a004b5e937d42c7d14ab703~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),e._v("\n那么是怎么处理的呢?")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f25580f0365f496cb3264d1cb6274eed~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),e._v("\n这里也是个策略模式,集群消费和广播消费会走到不同的逻辑中,这里咱们只说集群消费。")]),e._v(" "),t("h2",{attrs:{id:"拉取消息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拉取消息"}},[e._v("#")]),e._v(" 拉取消息")]),e._v(" "),t("p",[e._v("源码"),t("code",[e._v("DefaultMQPushConsumerImpl#pullMessage")])]),e._v(" "),t("p",[e._v("在拉取消息时,会做什么处理呢？")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ee05e0b82fa34c16a3441d8a6049e5e0~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),e._v("\n第一点的处理: 判断堆积消息的总数是否大于了配置值 默认是1000, 这个为了防止拉取消息过多消费不了。")]),e._v(" "),t("p",[e._v("第二点的处理: 判断堆积的消息总大小是否超过了配置值 默认是100M 这个是为了防止消息过多出现OOM。")]),e._v(" "),t("p",[e._v("第三点的处理: 判断消费的位置是否总是在中间,什么意思呢? 这里需要看到提交消费进度那就能明白了,总之就是为了避免消费进度不更新的情况。")]),e._v(" "),t("p",[e._v("最后看到执行请求的地方:")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cff27e561fa44db786212a025cae1ce9~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),e._v(" "),t("p",[e._v("一次拉取多少消息就是由画横线的地方决定，默认是"),t("code",[e._v("32")]),e._v("条。")]),e._v(" "),t("p",[e._v("拉取消息成功后会调用最后一个参数,那是一个回调函数")]),e._v(" "),t("p",[e._v("接下来就看拉取消息后是怎么处理消息的。")]),e._v(" "),t("h2",{attrs:{id:"怎么处理消息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#怎么处理消息"}},[e._v("#")]),e._v(" 怎么处理消息")]),e._v(" "),t("p",[e._v("看下该回调函数的位置:")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6de0dc1abc67472b8b46adb36f6493e8~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),e._v("\n具体源码就先不说了,咱们关注它的重点代码;")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d1dfe5ec6f1d43f6a558c8fe06c45823~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),e._v(" "),t("p",[e._v("取到消息后,会把所有消息放进processQueue中,随后调用submitConsumeRequest这里也是一个策略,并发消费和顺序消费是不同的逻辑,这里我们先关注并发消费。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d52d64fabcdd47a2b0b892def95eb682~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),e._v("\n这里面有一个关键参数: "),t("code",[e._v("consumeBatchSize")]),e._v(" 默认是1，意思是每次每个"),t("code",[e._v("runnable")]),e._v("只处理一条消息.")]),e._v(" "),t("p",[e._v("可以看到,这里遍历消息列表,给每个消息组装成"),t("code",[e._v("ConsumeRequest")]),e._v("类,丢入到消费线程池中,线程池默认是"),t("code",[e._v("20")]),e._v("个线程,使用"),t("code",[e._v("LinkedBlockingQueue")]),e._v("无界队列。")]),e._v(" "),t("p",[e._v("那么关键就在于这个"),t("code",[e._v("ConsumeRequest")]),e._v("是怎么处理的。")]),e._v(" "),t("p",[e._v("源码位于: "),t("code",[e._v("ConsumeMessageConcurrentlyService.ConsumeRequest#run()")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0fdd8bee62ad437abe23e4406d2edd28~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),e._v("\n它会先重置消息的重试topic名称,随后调用客户端的消费逻辑,得到返回值,也就是消费状态。")]),e._v(" "),t("p",[e._v("这样也就完成了一条消息的消费,那么最后是怎么提交进度的呢?")]),e._v(" "),t("h2",{attrs:{id:"怎么更新消费进度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#怎么更新消费进度"}},[e._v("#")]),e._v(" 怎么更新消费进度")]),e._v(" "),t("p",[e._v("看一下关键源码:"),t("code",[e._v("ConsumeMessageConcurrentlyService.processConsumeResult()")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0026ad79adb840b2889927ab2ccc151d~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),e._v(" "),t("p",[e._v("这里我们关注一下关键的地方。")]),e._v(" "),t("p",[e._v("第一点:集群消费模式下,如果消费失败是会立即发送一个重试消息到重试队列的。")]),e._v(" "),t("p",[e._v("第二点:这里开始处理当前的消费进度。")]),e._v(" "),t("p",[e._v("第三点:这里更新当前消费进度,不过是更新内存中的值,有一个定时任务定时往"),t("code",[e._v("Broker")]),e._v("发送。")]),e._v(" "),t("p",[e._v("看下第二点的源码:")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7901be68feeb4dc7a428608db4111525~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),e._v(" "),t("p",[e._v("看到画横线的地方,不管你当前是消费的哪条消息,它始终返回当前内存中第一条消息的位置为最新消费点。")]),e._v(" "),t("p",[e._v("所以,如果消费的一直都是中间位置的消息,那么消费点就一直不会更新,那么在重启后就会重复消费了。")]),e._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),t("p",[e._v("消费者在启动时会向所有"),t("code",[e._v("Broker")]),e._v("注册心跳, 执行负载均衡时会从"),t("code",[e._v("Broker")]),e._v("获取所有的消费者信息,随后执行负载均衡逻辑,分配完所有的"),t("code",[e._v("queue")]),e._v("之后开始组装拉取消息的请求体丢入请求队列,由后台线程一个一个处理,拉取到消息后丢给具体的消费类处理。")]),e._v(" "),t("p",[e._v("并发消费则是走"),t("code",[e._v("ConsumeMessageConcurrentlyService#submitConsumeRequest()")]),e._v("。")]),e._v(" "),t("p",[e._v("顺序消费则是走"),t("code",[e._v("ConsumeMessageOrderlyService#submitConsumeRequest()")]),e._v("。")]),e._v(" "),t("p",[e._v("并发消费更新位置总是取当前第一条消息的位置,后台定时任务隔一段时间就发送给"),t("code",[e._v("Broker")]),e._v("持久化,我们也知道了消费位置在"),t("code",[e._v("Broker")]),e._v("中是如何存储的以及如何取出消息的。")])])}),[],!1,null,null,null);t.default=v.exports}}]);